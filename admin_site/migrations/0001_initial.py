# Generated by Django 5.0 on 2025-01-25 16:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='BlogTagModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ForumTagModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SchoolAmenityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SiteInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('short_name', models.CharField(max_length=50)),
                ('mobile_1', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_2', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.FileField(upload_to='images/setting/logo')),
                ('facebook_handle', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_handle', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter_handle', models.CharField(blank=True, max_length=100, null=True)),
                ('primary_color', models.CharField(max_length=255)),
                ('secondary_color', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPostModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('image', models.FileField(upload_to='images/blog/post')),
                ('blog_detail', models.TextField()),
                ('no_of_views', models.IntegerField(blank=True, default=0)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('key', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.blogcategorymodel')),
                ('tag', models.ManyToManyField(blank=True, to='admin_site.blogtagmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BlogCommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('comments', models.TextField()),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='admin_site.blogpostmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BlogResponseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.blogcommentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ForumCommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('image', models.ImageField(upload_to='images/forum')),
                ('privacy', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('pending', 'PENDING')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumPostModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('image', models.ImageField(upload_to='images/forum')),
                ('description', models.TextField()),
                ('detail', models.TextField()),
                ('privacy', models.BooleanField(blank=True, default=False)),
                ('upvote', models.IntegerField(blank=True, default=0)),
                ('downvote', models.IntegerField(blank=True, default=0)),
                ('vote', models.IntegerField(blank=True, default=0)),
                ('upvoters', models.JSONField(blank=True, default={})),
                ('downvoters', models.JSONField(blank=True, default={})),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('pending', 'PENDING')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumQuestionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('privacy', models.CharField(blank=True, default='public', max_length=20)),
                ('upvote', models.IntegerField(blank=True, default=0)),
                ('downvote', models.IntegerField(blank=True, default=0)),
                ('vote', models.IntegerField(blank=True, default=0)),
                ('upvoters', models.JSONField(blank=True, default={})),
                ('downvoters', models.JSONField(blank=True, default={})),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('pending', 'PENDING')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumAnswerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('privacy', models.BooleanField(blank=True, default=False)),
                ('upvote', models.IntegerField(blank=True, default=0)),
                ('downvote', models.IntegerField(blank=True, default=0)),
                ('vote', models.IntegerField(blank=True, default=0)),
                ('upvoters', models.JSONField(blank=True, default={})),
                ('downvoters', models.JSONField(blank=True, default={})),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('pending', 'PENDING')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.forumquestionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolFinderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('boarding_type', models.CharField(blank=True, choices=[('day', 'DAY'), ('boarding', 'BOARDING'), ('combined', 'COMBINED')], max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'MALE'), ('female', 'FEMALE'), ('combined', 'COMBINED')], max_length=50, null=True)),
                ('mobile_1', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_2', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('lga', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('area', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.FileField(upload_to='images/setting/logo')),
                ('short_description', models.TextField(blank=True, null=True)),
                ('main_description', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school_owner_name', models.CharField(blank=True, max_length=200, null=True)),
                ('school_head_name', models.CharField(blank=True, max_length=200, null=True)),
                ('registrar_name', models.CharField(blank=True, max_length=200, null=True)),
                ('registrar_position', models.CharField(blank=True, max_length=100, null=True)),
                ('registrar_mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('pending', 'PENDING')], default='pending', max_length=20)),
                ('amenities', models.ManyToManyField(blank=True, to='admin_site.schoolamenitymodel')),
                ('school_type', models.ManyToManyField(blank=True, to='admin_site.schooltypemodel')),
            ],
        ),
    ]
